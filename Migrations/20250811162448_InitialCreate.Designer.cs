// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PocketBoss.Data;

#nullable disable

namespace PocketBoss.Migrations
{
    [DbContext(typeof(PocketBossDbContext))]
    [Migration("20250811162448_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PocketBoss.Models.Boss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentHealth")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MaxHealth")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Bosses");
                });

            modelBuilder.Entity("PocketBoss.Models.BossMove", b =>
                {
                    b.Property<int>("BossId")
                        .HasColumnType("integer");

                    b.Property<int>("MoveId")
                        .HasColumnType("integer");

                    b.Property<int>("SlotNumber")
                        .HasColumnType("integer");

                    b.HasKey("BossId", "MoveId");

                    b.HasIndex("MoveId");

                    b.ToTable("BossMoves");
                });

            modelBuilder.Entity("PocketBoss.Models.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GameState")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("RoomCode")
                        .HasColumnType("text");

                    b.Property<int>("TurnNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("PocketBoss.Models.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MoveType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Power")
                        .HasColumnType("integer");

                    b.Property<int>("TargetType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("PocketBoss.Models.PC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentHealth")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MaxHealth")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PCs");
                });

            modelBuilder.Entity("PocketBoss.Models.PCMove", b =>
                {
                    b.Property<int>("PCId")
                        .HasColumnType("integer");

                    b.Property<int>("MoveId")
                        .HasColumnType("integer");

                    b.Property<int>("SlotNumber")
                        .HasColumnType("integer");

                    b.HasKey("PCId", "MoveId");

                    b.HasIndex("MoveId");

                    b.ToTable("PCMoves");
                });

            modelBuilder.Entity("PocketBoss.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChosenMoveId")
                        .HasColumnType("integer");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("text");

                    b.Property<int>("GameSessionId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHost")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReady")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PCId")
                        .HasColumnType("integer");

                    b.Property<string>("Uuid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChosenMoveId");

                    b.HasIndex("GameSessionId");

                    b.HasIndex("PCId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PocketBoss.Models.BossMove", b =>
                {
                    b.HasOne("PocketBoss.Models.Boss", "Boss")
                        .WithMany("BossMoves")
                        .HasForeignKey("BossId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PocketBoss.Models.Move", "Move")
                        .WithMany("BossMoves")
                        .HasForeignKey("MoveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boss");

                    b.Navigation("Move");
                });

            modelBuilder.Entity("PocketBoss.Models.PCMove", b =>
                {
                    b.HasOne("PocketBoss.Models.Move", "Move")
                        .WithMany("PCMoves")
                        .HasForeignKey("MoveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PocketBoss.Models.PC", "PC")
                        .WithMany("PCMoves")
                        .HasForeignKey("PCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Move");

                    b.Navigation("PC");
                });

            modelBuilder.Entity("PocketBoss.Player", b =>
                {
                    b.HasOne("PocketBoss.Models.Move", "ChosenMove")
                        .WithMany()
                        .HasForeignKey("ChosenMoveId");

                    b.HasOne("PocketBoss.Models.GameSession", "GameSession")
                        .WithMany()
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PocketBoss.Models.PC", "PC")
                        .WithMany()
                        .HasForeignKey("PCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChosenMove");

                    b.Navigation("GameSession");

                    b.Navigation("PC");
                });

            modelBuilder.Entity("PocketBoss.Models.Boss", b =>
                {
                    b.Navigation("BossMoves");
                });

            modelBuilder.Entity("PocketBoss.Models.Move", b =>
                {
                    b.Navigation("BossMoves");

                    b.Navigation("PCMoves");
                });

            modelBuilder.Entity("PocketBoss.Models.PC", b =>
                {
                    b.Navigation("PCMoves");
                });
#pragma warning restore 612, 618
        }
    }
}
